"use strict";(self.webpackChunkdocu=self.webpackChunkdocu||[]).push([[579],{593:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>r});const s=JSON.parse('{"id":"project-setup/framework-specific-setup","title":"Framework-Specific Setup","description":"While the interactive setup is recommended, you can also quickly configure claude-code-templates for specific templates using the modern --template parameter or legacy --language/--framework commands.","source":"@site/docs/project-setup/framework-specific-setup.md","sourceDirName":"project-setup","slug":"/project-setup/framework-specific-setup","permalink":"/docu/docs/project-setup/framework-specific-setup","draft":false,"unlisted":false,"editUrl":"https://github.com/davila7/claude-code-templates/tree/main/docu/docs/project-setup/framework-specific-setup.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Interactive Project Setup","permalink":"/docu/docs/project-setup/interactive-setup"},"next":{"title":"What Gets Installed","permalink":"/docu/docs/project-setup/what-gets-installed"}}');var l=n(4848),a=n(8453);const o={sidebar_position:2},c="Framework-Specific Setup",i={},r=[{value:"Modern Template Installation (Recommended)",id:"modern-template-installation-recommended",level:2},{value:"Legacy Syntax (Still Supported)",id:"legacy-syntax-still-supported",level:2},{value:"Interactive Setup (Recommended)",id:"interactive-setup-recommended",level:2},{value:"Template vs Component Installation",id:"template-vs-component-installation",level:2},{value:"Complete Templates (<code>--template</code>)",id:"complete-templates---template",level:3},{value:"Individual Components",id:"individual-components",level:3},{value:"GitHub Download System",id:"github-download-system",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(t.header,{children:(0,l.jsx)(t.h1,{id:"framework-specific-setup",children:"Framework-Specific Setup"})}),"\n",(0,l.jsxs)(t.p,{children:["While the interactive setup is recommended, you can also quickly configure ",(0,l.jsx)(t.code,{children:"claude-code-templates"})," for specific templates using the modern ",(0,l.jsx)(t.code,{children:"--template"})," parameter or legacy ",(0,l.jsx)(t.code,{children:"--language"}),"/",(0,l.jsx)(t.code,{children:"--framework"})," commands."]}),"\n",(0,l.jsx)(t.h2,{id:"modern-template-installation-recommended",children:"Modern Template Installation (Recommended)"}),"\n",(0,l.jsxs)(t.p,{children:["Use the new ",(0,l.jsx)(t.code,{children:"--template"})," parameter for streamlined template installation:"]}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-bash",children:"# React project with all components\nnpx claude-code-templates@latest --template=react --yes\n\n# Python project with all components\nnpx claude-code-templates@latest --template=python --yes\n\n# Node.js project with all components\nnpx claude-code-templates@latest --template=nodejs --yes\n\n# Vue.js project with all components\nnpx claude-code-templates@latest --template=vue --yes\n\n# Django project with all components\nnpx claude-code-templates@latest --template=django --yes\n"})}),"\n",(0,l.jsx)(t.h2,{id:"legacy-syntax-still-supported",children:"Legacy Syntax (Still Supported)"}),"\n",(0,l.jsxs)(t.p,{children:["The original ",(0,l.jsx)(t.code,{children:"--language"})," and ",(0,l.jsx)(t.code,{children:"--framework"})," flags are still supported but deprecated:"]}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-bash",children:"# React + TypeScript project (legacy)\nnpx claude-code-templates@latest --language=javascript-typescript --framework=react --yes\n\n# Python + Django project (legacy)\nnpx claude-code-templates@latest --language=python --framework=django --yes\n"})}),"\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.strong,{children:"Note"}),": These legacy parameters will continue to work but using ",(0,l.jsx)(t.code,{children:"--template"})," is preferred for new installations."]}),"\n",(0,l.jsxs)(t.p,{children:["The ",(0,l.jsx)(t.code,{children:"--yes"})," flag will skip all prompts and use default configurations, making the setup process fully automated."]}),"\n",(0,l.jsx)(t.h2,{id:"interactive-setup-recommended",children:"Interactive Setup (Recommended)"}),"\n",(0,l.jsx)(t.p,{children:"Even when you know your framework, running the tool without specific flags is often the best approach:"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-bash",children:"cd my-react-app\nnpx claude-code-templates@latest\n# The tool will auto-detect React and suggest optimal configuration\n"})}),"\n",(0,l.jsx)(t.p,{children:"This method allows the tool to intelligently detect your project's environment and offer tailored suggestions, ensuring the best possible setup for your Claude Code workflow."}),"\n",(0,l.jsx)(t.h2,{id:"template-vs-component-installation",children:"Template vs Component Installation"}),"\n",(0,l.jsxs)(t.h3,{id:"complete-templates---template",children:["Complete Templates (",(0,l.jsx)(t.code,{children:"--template"}),")"]}),"\n",(0,l.jsxs)(t.ul,{children:["\n",(0,l.jsxs)(t.li,{children:["Downloads complete project configuration from ",(0,l.jsx)(t.code,{children:"templates/"})," directory"]}),"\n",(0,l.jsx)(t.li,{children:"Includes CLAUDE.md, agents, commands, and MCP configurations"}),"\n",(0,l.jsx)(t.li,{children:"Best for new project setups"}),"\n"]}),"\n",(0,l.jsx)(t.h3,{id:"individual-components",children:"Individual Components"}),"\n",(0,l.jsx)(t.p,{children:"You can also install individual components instead of complete templates:"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-bash",children:"# Install specific agent\nnpx claude-code-templates@latest --agent=react-performance --yes\n\n# Install specific command\nnpx claude-code-templates@latest --command=check-file --yes\n\n# Install specific MCP\nnpx claude-code-templates@latest --mcp=github-integration --yes\n"})}),"\n",(0,l.jsx)(t.h2,{id:"github-download-system",children:"GitHub Download System"}),"\n",(0,l.jsx)(t.p,{children:"All templates and components are now downloaded directly from GitHub:"}),"\n",(0,l.jsxs)(t.ul,{children:["\n",(0,l.jsxs)(t.li,{children:[(0,l.jsx)(t.strong,{children:"Real-time Downloads"}),": Always get the latest versions"]}),"\n",(0,l.jsxs)(t.li,{children:[(0,l.jsx)(t.strong,{children:"Transparent URLs"}),": See exactly what files are being downloaded"]}),"\n",(0,l.jsxs)(t.li,{children:[(0,l.jsx)(t.strong,{children:"Caching"}),": Downloaded files are cached for better performance"]}),"\n",(0,l.jsxs)(t.li,{children:[(0,l.jsx)(t.strong,{children:"Repository Structure"}),": Templates in ",(0,l.jsx)(t.code,{children:"templates/"}),", components in ",(0,l.jsx)(t.code,{children:"components/"})]}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>c});var s=n(6540);const l={},a=s.createContext(l);function o(e){const t=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);