"use strict";(self.webpackChunkdocu=self.webpackChunkdocu||[]).push([[651],{8453:(e,o,t)=>{t.d(o,{R:()=>r,x:()=>a});var s=t(6540);const n={},i=s.createContext(n);function r(e){const o=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(o):{...o,...e}},[o,e])}function a(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),s.createElement(i.Provider,{value:o},e.children)}},9408:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>r,metadata:()=>s,toc:()=>u});const s=JSON.parse('{"id":"project-setup/automation-hooks","title":"Automation Hooks","description":"Automation hooks in claude-code-templates allow you to execute custom actions at key moments during the Claude Code workflow. This enables powerful automation and integration with your existing development processes.","source":"@site/docs/project-setup/automation-hooks.md","sourceDirName":"project-setup","slug":"/project-setup/automation-hooks","permalink":"/docu/docs/project-setup/automation-hooks","draft":false,"unlisted":false,"editUrl":"https://github.com/davila7/claude-code-templates/tree/main/docu/docs/project-setup/automation-hooks.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Supported Languages & Frameworks","permalink":"/docu/docs/project-setup/supported-languages-frameworks"},"next":{"title":"MCP Integration","permalink":"/docu/docs/project-setup/mcp-integration"}}');var n=t(4848),i=t(8453);const r={sidebar_position:5},a="Automation Hooks",c={},u=[{value:"Types of Hooks",id:"types-of-hooks",level:2}];function d(e){const o={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.header,{children:(0,n.jsx)(o.h1,{id:"automation-hooks",children:"Automation Hooks"})}),"\n",(0,n.jsxs)(o.p,{children:["Automation hooks in ",(0,n.jsx)(o.code,{children:"claude-code-templates"})," allow you to execute custom actions at key moments during the Claude Code workflow. This enables powerful automation and integration with your existing development processes."]}),"\n",(0,n.jsx)(o.h2,{id:"types-of-hooks",children:"Types of Hooks"}),"\n",(0,n.jsxs)(o.ul,{children:["\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.strong,{children:"PreToolUse"}),": These hooks execute before Claude Code uses a tool. They can be used for security checks, logging, or statement detection."]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.strong,{children:"PostToolUse"}),": These hooks run after Claude Code has used a tool. Common uses include auto-formatting code, performing type checking, or running tests."]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.strong,{children:"Stop"}),": These hooks are triggered when the Claude Code workflow stops. They can be used for final linting, bundle analysis, or other post-completion tasks."]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.strong,{children:"Notification"}),": These hooks are designed for activity logging and monitoring, allowing you to receive notifications about various events within the Claude Code workflow."]}),"\n"]})]})}function l(e={}){const{wrapper:o}={...(0,i.R)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}}}]);